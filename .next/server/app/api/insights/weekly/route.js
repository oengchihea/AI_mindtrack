/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/insights/weekly/route";
exports.ids = ["app/api/insights/weekly/route"];
exports.modules = {

/***/ "(rsc)/./app/api/insights/weekly/route.js":
/*!******************************************!*\
  !*** ./app/api/insights/weekly/route.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\n// Get API key from environment variable or use a fallback for development\nconst API_KEY = process.env.GEMINI_API_KEY || \"AIzaSyAjF5pPXz6SmdQ5QG8IgsIetsmPY1v0VPM\";\nasync function POST(request) {\n    try {\n        const { moodData, journalData, weekStart, weekEnd } = await request.json();\n        if (!moodData && !journalData) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing mood or journal data\"\n            }, {\n                status: 400\n            });\n        }\n        // Filter data for the selected week\n        const weekStartDate = new Date(weekStart);\n        const weekEndDate = new Date(weekEnd);\n        const weeklyMoodData = moodData.filter((entry)=>{\n            const entryDate = new Date(entry.timestamp || entry.date);\n            return entryDate >= weekStartDate && entryDate < weekEndDate;\n        });\n        const weeklyJournalData = journalData.filter((entry)=>{\n            const entryDate = new Date(entry.timestamp || entry.date);\n            return entryDate >= weekStartDate && entryDate < weekEndDate;\n        });\n        // Create a day-by-day breakdown of the week\n        const dayBreakdown = [];\n        for(let i = 0; i < 7; i++){\n            const currentDay = new Date(weekStartDate);\n            currentDay.setDate(weekStartDate.getDate() + i);\n            // Get entries for this day\n            const dayMoods = weeklyMoodData.filter((entry)=>{\n                const entryDate = new Date(entry.timestamp || entry.date);\n                return entryDate.getDate() === currentDay.getDate() && entryDate.getMonth() === currentDay.getMonth() && entryDate.getFullYear() === currentDay.getFullYear();\n            });\n            const dayJournals = weeklyJournalData.filter((entry)=>{\n                const entryDate = new Date(entry.timestamp || entry.date);\n                return entryDate.getDate() === currentDay.getDate() && entryDate.getMonth() === currentDay.getMonth() && entryDate.getFullYear() === currentDay.getFullYear();\n            });\n            // Calculate average mood for the day\n            const avgMood = dayMoods.length > 0 ? dayMoods.reduce((sum, entry)=>sum + (entry.score || 0), 0) / dayMoods.length : null;\n            dayBreakdown.push({\n                date: currentDay.toISOString(),\n                dayOfWeek: [\n                    \"Sunday\",\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\",\n                    \"Friday\",\n                    \"Saturday\"\n                ][currentDay.getDay()],\n                moodEntries: dayMoods.length,\n                journalEntries: dayJournals.length,\n                averageMood: avgMood\n            });\n        }\n        // Create prompt for Gemini API\n        const prompt = `Analyze the following weekly mood tracking and journal data to identify patterns, trends, and insights.\n                   Focus on mood fluctuations throughout the week and potential triggers.\n                   \n                   Week: ${weekStartDate.toLocaleDateString()} to ${weekEndDate.toLocaleDateString()}\n                   \n                   Mood Data: ${JSON.stringify(weeklyMoodData)}\n                   Journal Data: ${JSON.stringify(weeklyJournalData)}\n                   Day-by-Day Breakdown: ${JSON.stringify(dayBreakdown)}\n                   \n                   Return the analysis as a JSON object with these properties:\n                   1. summary: A brief summary of the week's mood and journal patterns\n                   2. patterns: Array of identified patterns for this week (at least 2-3 patterns if data permits)\n                   3. insights: Key insights about the user's mood trends this week\n                   4. moodTrend: Description of how the mood changed throughout the week\n                   5. peakDay: The day with the highest mood score\n                   6. lowDay: The day with the lowest mood score\n                   \n                   If there's not enough data for a particular field, provide a message indicating more data is needed.\n                   DO NOT include any text before or after the JSON.`;\n        // Call the Gemini API\n        const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${API_KEY}`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                contents: [\n                    {\n                        parts: [\n                            {\n                                text: prompt\n                            }\n                        ]\n                    }\n                ],\n                generationConfig: {\n                    temperature: 0.2,\n                    maxOutputTokens: 1024\n                }\n            })\n        });\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error(\"Gemini API error:\", errorData);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: `Gemini API error: ${JSON.stringify(errorData)}`\n            }, {\n                status: 500\n            });\n        }\n        const data = await response.json();\n        // Extract the text from the Gemini response\n        let text = \"\";\n        if (data.candidates && data.candidates[0] && data.candidates[0].content) {\n            const parts = data.candidates[0].content.parts;\n            if (parts && parts.length > 0) {\n                text = parts[0].text;\n            }\n        }\n        if (!text) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Empty response from Gemini API\"\n            }, {\n                status: 500\n            });\n        }\n        // Parse the response as JSON\n        let analysisResult;\n        try {\n            // Try to extract JSON from the text (in case there's any extra text)\n            const jsonMatch = text.match(/\\{[\\s\\S]*\\}/);\n            const jsonText = jsonMatch ? jsonMatch[0] : text;\n            analysisResult = JSON.parse(jsonText);\n            // Add the day breakdown to the response\n            analysisResult.dayBreakdown = dayBreakdown;\n        } catch (e) {\n            console.error(\"Error parsing Gemini response as JSON:\", e);\n            // If parsing fails, create a basic analysis result\n            analysisResult = {\n                summary: \"We analyzed your mood and journal data for the week.\",\n                patterns: [\n                    \"No clear patterns could be identified with the available data.\"\n                ],\n                insights: \"Continue tracking your mood and journaling to get more detailed insights.\",\n                moodTrend: \"Not enough data to determine a trend.\",\n                dayBreakdown: dayBreakdown\n            };\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            analysis: analysisResult\n        });\n    } catch (error) {\n        console.error(\"Error analyzing weekly data:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to analyze weekly data\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/insights/weekly/route.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Finsights%2Fweekly%2Froute&page=%2Fapi%2Finsights%2Fweekly%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finsights%2Fweekly%2Froute.js&appDir=C%3A%5CAI%20mindtrack%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAI%20mindtrack&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Finsights%2Fweekly%2Froute&page=%2Fapi%2Finsights%2Fweekly%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finsights%2Fweekly%2Froute.js&appDir=C%3A%5CAI%20mindtrack%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAI%20mindtrack&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_AI_mindtrack_app_api_insights_weekly_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/insights/weekly/route.js */ \"(rsc)/./app/api/insights/weekly/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/insights/weekly/route\",\n        pathname: \"/api/insights/weekly\",\n        filename: \"route\",\n        bundlePath: \"app/api/insights/weekly/route\"\n    },\n    resolvedPagePath: \"C:\\\\AI mindtrack\\\\app\\\\api\\\\insights\\\\weekly\\\\route.js\",\n    nextConfigOutput,\n    userland: C_AI_mindtrack_app_api_insights_weekly_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZpbnNpZ2h0cyUyRndlZWtseSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGaW5zaWdodHMlMkZ3ZWVrbHklMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZpbnNpZ2h0cyUyRndlZWtseSUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDQUklMjBtaW5kdHJhY2slNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNBSSUyMG1pbmR0cmFjayZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDTTtBQUNuRjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcQUkgbWluZHRyYWNrXFxcXGFwcFxcXFxhcGlcXFxcaW5zaWdodHNcXFxcd2Vla2x5XFxcXHJvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9pbnNpZ2h0cy93ZWVrbHkvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9pbnNpZ2h0cy93ZWVrbHlcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2luc2lnaHRzL3dlZWtseS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXEFJIG1pbmR0cmFja1xcXFxhcHBcXFxcYXBpXFxcXGluc2lnaHRzXFxcXHdlZWtseVxcXFxyb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Finsights%2Fweekly%2Froute&page=%2Fapi%2Finsights%2Fweekly%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finsights%2Fweekly%2Froute.js&appDir=C%3A%5CAI%20mindtrack%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAI%20mindtrack&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Finsights%2Fweekly%2Froute&page=%2Fapi%2Finsights%2Fweekly%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Finsights%2Fweekly%2Froute.js&appDir=C%3A%5CAI%20mindtrack%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAI%20mindtrack&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();